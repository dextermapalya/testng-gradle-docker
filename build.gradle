apply plugin: 'groovy' 
apply from: "webdriver.gradle"

repositories {
    mavenCentral()
    //jcenter()

}

defaultTasks 'testChrome'

ext{
//https://stackoverflow.com/questions/43606992/run-a-specific-testng-xml-test-suite-with-gradle-from-command-line/43642736

    //set suiteFile, default is 'testng.xml'
    if (!project.hasProperty('suiteFile')) {
        suiteFile = 'testng.xml'
    }

    //fetch the name of the xml file
    //this file is used to run the test
    if (project.hasProperty('suiteFile')) {
        suiteFile = project.property('suiteFile')
        println suiteFile + "****"
    }

}

dependencies { 
 	testCompile 'org.testng:testng:6.13.1'
    compile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'com.codeborne:phantomjsdriver:1.3.0'
    //testCompile 'org.seleniumhq.selenium:selenium-chrome-driver:2.53.1'
    //testCompile "org.seleniumhq.selenium:selenium-remote-driver:3.6.0"
    //testCompile 'org.seleniumhq.selenium:selenium-chrome-driver:3.141.59'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    testCompile("io.github.bonigarcia:webdrivermanager:3.6.2")
    //compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.12.0'
    //compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.12.0'    
    //compile 'org.apache.logging.log4j:log4j-api:2.12.0'
    compile 'org.apache.logging.log4j:log4j-core:2.12.0'
    compile 'org.slf4j:slf4j-log4j12:1.7.26'

}

test {
    // enable TestNG support (default is JUnit)
    //useTestNG()
    useTestNG() {
       useDefaultListeners = true // Tells TestNG to execute its default reporting structure
       //suites 'src/test/java/testng.xml' //location of our suite.xml

        //suites ‘./testng.xml’
        //if (project.hasProperty('DockerHub')) { suites 'testng.xml' }
        if (  project.hasProperty('DockerHub') ) {
            suiteFile = 'testng.xml'
        }
        suites suiteFile
    }

    //Show full exception on failure
    testLogging {
        exceptionFormat = 'full'
    }

    //Convenience .. pipe all test results to SDOUT
    afterTest { desc, result ->
        println "${desc.className} ${desc.name} ${result.resultType}"
    }

    //Force tests to always run, even if they haven't been updated
    outputs.upToDateWhen { false }
}
